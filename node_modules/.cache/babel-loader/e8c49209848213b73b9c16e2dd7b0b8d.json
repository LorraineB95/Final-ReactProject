{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lorraine\\\\Desktop\\\\College 2020\\\\Semester 1\\\\Data Querying and Representation\\\\FinalProject\\\\react-final-project\\\\src\\\\components\\\\BookList\\\\read.js\";\nimport React from 'react';\nimport { Movies } from './movies';\nimport axios from 'axios';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Container } from 'reactstrap';\nimport Create from './components/BookList/create';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createBook(title, author, year, genre, rating) {\n  return {\n    title,\n    author,\n    year,\n    genre,\n    rating\n  };\n}\n\nconst styles = theme => ({\n  table: {\n    minWidth: 700,\n    width: \"97%\",\n    float: 'right',\n    padding: '50px 20px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '18%'\n  }\n});\n\nclass Read extends React.Component {\n  //state stores data relevent to the component\n  constructor() {\n    super();\n    this.state = {\n      movies: []\n    };\n    this.ReloadDataMethod = this.ReloadDataMethod.bind(this);\n  } //componentDidMount executes after the first render on the client side\n  //axios retrives movie information from the link\n\n\n  ReloadDataMethod() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data.movies\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data\n      });\n    }) //if there is an error an error message will be returned\n    .catch(error => {\n      console.log(error);\n    });\n  } //Render will display the movie data stored in state\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"customized table\",\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  height: \"32px\",\n                  backgroundColor: \"#DB3D44\"\n                },\n                children: \"Book List 2021\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  backgroundColor: \"#DB3D44\"\n                },\n                children: \"Book Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  backgroundColor: \"#DB3D44\"\n                },\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  backgroundColor: \"#DB3D44\"\n                },\n                children: \"Genre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  backgroundColor: \"#DB3D44\"\n                },\n                children: \"Book Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  backgroundColor: \"#DB3D44\"\n                },\n                align: \"left\",\n                children: \"\\xA0\\xA0\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  backgroundColor: \"#DB3D44\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Movies, {\n        myMovies: this.state.movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/BookList/create/\",\n        className: \"btn btn-primary\",\n        children: \"Edit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Read);","map":{"version":3,"sources":["C:/Users/Lorraine/Desktop/College 2020/Semester 1/Data Querying and Representation/FinalProject/react-final-project/src/components/BookList/read.js"],"names":["React","Movies","axios","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Rating","Button","Container","Create","Modal","Backdrop","Fade","useTheme","Link","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","createBook","title","author","year","genre","rating","styles","table","minWidth","width","float","padding","modal","display","alignItems","justifyContent","paper","background","border","boxShadow","shadows","spacing","Read","Component","constructor","state","movies","ReloadDataMethod","bind","get","then","response","setState","data","catch","error","console","log","componentDidMount","render","classes","props","height","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Movies } from './movies';\r\nimport axios from 'axios';\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Container} from 'reactstrap';\r\nimport  Create from './components/BookList/create';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14\r\n    }\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover\r\n      }\r\n    }\r\n  }))(TableRow);\r\n  \r\n  function createBook(title, author, year, genre, rating) {\r\n    return { title, author, year, genre, rating};\r\n  }\r\n  \r\n  \r\n  const styles = theme => ({\r\n    table: {\r\n      minWidth: 700,\r\n      width: \"97%\",\r\n      float: 'right',\r\n      padding: '50px 20px',\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  \r\n      \r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      width: '18%',\r\n    },\r\n    \r\n  });\r\n\r\n\r\n  class Read extends React.Component {\r\n\r\n    \r\n    //state stores data relevent to the component\r\n    state = {\r\n\r\n        movies: []\r\n    };\r\n    constructor(){\r\n        super();\r\n        this.ReloadDataMethod = this.ReloadDataMethod.bind(this);\r\n        }\r\n        \r\n    //componentDidMount executes after the first render on the client side\r\n    //axios retrives movie information from the link\r\n    ReloadDataMethod(){\r\n        axios.get('http://localhost:4000/api/movies')\r\n        .then((response)=>{\r\n        this.setState({movies: response.data.movies})\r\n        })\r\n        .catch((error)=>{\r\n        console.log(error);\r\n        });\r\n        }\r\n        \r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/movies')\r\n            .then((response) => {\r\n                    this.setState({ movies: response.data})\r\n                }\r\n            )\r\n    //if there is an error an error message will be returned\r\n            .catch(\r\n                (error)=>{\r\n                        console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    //Render will display the movie data stored in state\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                \r\n             \r\n    <TableContainer component={Paper}>\r\n\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n\r\n        <TableHead >\r\n          <TableRow>\r\n            <StyledTableCell style={{ height: \"32px\", backgroundColor: \"#DB3D44\"  }}>Book List 2021</StyledTableCell>\r\n            <StyledTableCell style={{ backgroundColor: \"#DB3D44\" }} >Book Author</StyledTableCell>\r\n            <StyledTableCell style={{ backgroundColor: \"#DB3D44\" }} >Year</StyledTableCell>\r\n            <StyledTableCell style={{ backgroundColor: \"#DB3D44\" }} >Genre</StyledTableCell>\r\n            <StyledTableCell style={{ backgroundColor: \"#DB3D44\" }} >Book Rating</StyledTableCell>\r\n            <StyledTableCell style={{ backgroundColor: \"#DB3D44\" }} align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;</StyledTableCell>\r\n            <StyledTableCell style={{ backgroundColor: \"#DB3D44\" }} ></StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n      </Table>\r\n    </TableContainer>\r\n\r\n    <Movies myMovies={this.state.movies}></Movies>\r\n    <br></br>\r\n    <Link to={\"/BookList/create/\"} className=\"btn btn-primary\">Edit </Link>\r\n\r\n  \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(Read);"]},"metadata":{},"sourceType":"module"}