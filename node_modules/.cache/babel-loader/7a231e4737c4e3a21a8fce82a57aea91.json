{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lorraine\\\\Desktop\\\\College 2020\\\\Semester 1\\\\Data Querying and Representation\\\\FinalProject\\\\react-final-project\\\\src\\\\components\\\\BookList\\\\edit.js\";\nimport React from 'react';\nimport axios from 'axios'; //Exports the contents of class 'edit' when called\n\nexport class Edit extends React.Component {\n  //Render returns the <h3> contents \n  constructor() {\n    super(); //This binds contexts to the functions to be run later\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeYear = this.onChangeYear.bind(this);\n    this.onChangePoster = this.onChangePoster.bind(this); //State stores data relevant to the component\n\n    this.state = {\n      title: '',\n      year: '',\n      poster: ''\n    };\n  } //e.target.value is the value property of the DOM element, ie the info submitted in the form\n  //This is when the functions are called\n  //componentDidMount is the lifecycle hook\n\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data\n      });\n    }) //if there is an error an error message will be returned\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id); //Returns a movie by id and updates the state of the movie\n\n    axios.get('http://localhost:4000/api/movies/' + this.props.match.params.id).then(response => {\n      this.setState({\n        _id: response.data._id,\n        title: response.data.title,\n        year: response.data.year,\n        poster: response.data.poster\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangePoster(e) {\n    this.setState({\n      poster: e.target.value\n    });\n  }\n\n  onChangeYear(e) {\n    this.setState({\n      year: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); //alert returns a pop up so we know the data has been entered\n\n    console.log(this.state.title);\n    console.log(this.state.year);\n    console.log(this.state.poster);\n    alert(\"Movie:\" + this.state.title + \" \" + this.state.year + \" \" + this.state.poster);\n    const newMovie = {\n      title: this.state.title,\n      year: this.state.year,\n      poster: this.state.poster,\n      _id: this.state._id\n    }; //calls findByIdAndUpdate method\n\n    axios.patch('http://localhost:4000/api/movies/' + this.state._id, newMovie).then(res => {\n      console.log(res.data);\n    }).catch();\n  } //<form> creates a form for the user to interact with and add movie information\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"95%\",\n        float: \"right\"\n      },\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Add Movie Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.title,\n            onChange: this.onChangeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Add Movie Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.year,\n            onChange: this.onChangeYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Movie Poster:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.poster,\n            onChange: this.onChangePoster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Edit Movie\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lorraine/Desktop/College 2020/Semester 1/Data Querying and Representation/FinalProject/react-final-project/src/components/BookList/edit.js"],"names":["React","axios","Edit","Component","constructor","onSubmit","bind","onChangeTitle","onChangeYear","onChangePoster","state","title","year","poster","componentDidMount","get","then","response","setState","movies","data","catch","error","console","log","props","match","params","id","_id","e","target","value","preventDefault","alert","newMovie","patch","res","render","width","float"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n//Exports the contents of class 'edit' when called\r\nexport class Edit extends React.Component {\r\n\r\n    //Render returns the <h3> contents \r\n    constructor() {\r\n        super();\r\n\r\n        //This binds contexts to the functions to be run later\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeYear = this.onChangeYear.bind(this);\r\n        this.onChangePoster = this.onChangePoster.bind(this);\r\n\r\n        //State stores data relevant to the component\r\n        this.state = {\r\n            title: '',\r\n            year: '',\r\n            poster: '',\r\n        }\r\n    }\r\n    //e.target.value is the value property of the DOM element, ie the info submitted in the form\r\n    //This is when the functions are called\r\n    //componentDidMount is the lifecycle hook\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/movies')\r\n            .then((response) => {\r\n                    this.setState({ movies: response.data})\r\n                }\r\n            )\r\n    //if there is an error an error message will be returned\r\n            .catch(\r\n                (error)=>{\r\n                        console.log(error)\r\n                }\r\n            );\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props.match.params.id);\r\n\r\n        //Returns a movie by id and updates the state of the movie\r\n        axios.get('http://localhost:4000/api/movies/'+this.props.match.params.id)\r\n        .then(response =>{\r\n            this.setState({\r\n                _id:response.data._id,\r\n                title:response.data.title,\r\n                year:response.data.year,\r\n                poster:response.data.poster\r\n            })\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n    onChangeTitle(e) {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n    onChangePoster(e) {\r\n        this.setState({\r\n            poster: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeYear(e) {\r\n        this.setState({\r\n            year: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //alert returns a pop up so we know the data has been entered\r\n\r\n    console.log(this.state.title);\r\n    console.log(this.state.year);\r\n    console.log(this.state.poster);\r\n\r\n        alert(\"Movie:\" + this.state.title + \" \" + this.state.year\r\n            + \" \" + this.state.poster);\r\n            const newMovie = {\r\n                title: this.state.title,\r\n                year: this.state.year,\r\n                poster: this.state.poster,\r\n                _id: this.state._id\r\n            }\r\n         \r\n            //calls findByIdAndUpdate method\r\n            axios.patch('http://localhost:4000/api/movies/'+this.state._id, newMovie)\r\n            .then(res =>{\r\n                console.log(res.data)\r\n            })\r\n            .catch();\r\n            \r\n    }\r\n\r\n    //<form> creates a form for the user to interact with and add movie information\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"95%\", float: \"right\",}} className='App'>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Movie Title</label>\r\n                        <input type='text'\r\n                            className='form-control'\r\n                            value={this.state.title}\r\n                            onChange={this.onChangeTitle}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Movie Year:</label>\r\n                        <input type='text'\r\n                            className='form-control'\r\n                            value={this.state.year}\r\n                            onChange={this.onChangeYear}>\r\n                        </input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Movie Poster:</label>\r\n                        <textarea type='text'\r\n                            className='form-control'\r\n                            value={this.state.poster}\r\n                            onChange={this.onChangePoster}>\r\n                        </textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type='submit'\r\n                            value='Edit Movie'\r\n                            className='btn btn-primary'></input>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}