{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lorraine\\\\Desktop\\\\College 2020\\\\Semester 1\\\\Data Querying and Representation\\\\FinalProject\\\\react-final-project\\\\src\\\\components\\\\BookList\\\\mybooks.js\";\nimport React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Container } from 'reactstrap';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { useTheme } from '@material-ui/core/styles';\nimport axios from 'axios';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createBook(title, author, year, genre, rating) {\n  return {\n    title,\n    author,\n    year,\n    genre,\n    rating\n  };\n}\n\nconst rows = [createBook('The Name Of the Wind', 'Patrick Rothfuss', 2007, 'Fantasy', 4), createBook('Nevernight', 'Jay Kristoff', 2016, 'Fantasy', 3), createBook('All The Light We Cannot See', 'Anthony Doerr', 2014, 'Historical Fiction', 4), createBook('The Troop', 'Nick Cutter', 2014, 'Horror', 3), createBook('Jump', 'Daniella Moyles', 2020, 'Biography', 3), createBook('The Name Of the Wind', 'Patrick Rothfuss', 2007, 'Fantasy', 4), createBook('Nevernight', 'Jay Kristoff', 2016, 'Fantasy', 3), createBook('All The Light We Cannot See', 'Anthony Doerr', 2014, 'Historical Fiction', 4), createBook('The Troop', 'Nick Cutter', 2014, 'Horror', 3), createBook('Jump', 'Daniella Moyles', 2020, 'Biography', 3)];\n\nconst styles = theme => ({\n  table: {\n    minWidth: 700,\n    width: \"97%\",\n    float: 'right',\n    padding: '50px 20px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '18%'\n  }\n});\n\nclass MyBooks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: []\n    };\n    this.ReloadDataMethod = this.ReloadDataMethod.bind(this);\n  }\n\n  ReloadDataMethod() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data.movies\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data\n      });\n    }) //if there is an error an error message will be returned\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return this.props.myMovies.map(myMovies => {\n      //console.log({movie});\n      return /*#__PURE__*/_jsxDEV(MyBooks, {\n        myMovies: myMovies,\n        ReloadDataMethod: this.props.ReloadDataMethod\n      }, myMovies._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(MyBooks);","map":{"version":3,"sources":["C:/Users/Lorraine/Desktop/College 2020/Semester 1/Data Querying and Representation/FinalProject/react-final-project/src/components/BookList/mybooks.js"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Rating","Button","Container","Modal","Backdrop","Fade","useTheme","axios","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","createBook","title","author","year","genre","rating","rows","styles","table","minWidth","width","float","padding","modal","display","alignItems","justifyContent","paper","background","border","boxShadow","shadows","spacing","MyBooks","Component","constructor","state","movies","ReloadDataMethod","bind","get","then","response","setState","data","catch","error","console","log","componentDidMount","render","props","myMovies","map","_id","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Container} from 'reactstrap';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nfunction createBook(title, author, year, genre, rating) {\r\n  return { title, author, year, genre, rating};\r\n}\r\n\r\nconst rows = [\r\n  createBook( 'The Name Of the Wind', 'Patrick Rothfuss', 2007, 'Fantasy', 4),\r\n  createBook('Nevernight', 'Jay Kristoff', 2016, 'Fantasy', 3),\r\n  createBook('All The Light We Cannot See', 'Anthony Doerr', 2014, 'Historical Fiction', 4),\r\n  createBook('The Troop', 'Nick Cutter', 2014, 'Horror', 3),\r\n  createBook('Jump', 'Daniella Moyles', 2020, 'Biography', 3),\r\n  createBook('The Name Of the Wind', 'Patrick Rothfuss', 2007, 'Fantasy', 4),\r\n  createBook('Nevernight', 'Jay Kristoff', 2016, 'Fantasy', 3),\r\n  createBook('All The Light We Cannot See', 'Anthony Doerr', 2014, 'Historical Fiction', 4),\r\n  createBook('The Troop', 'Nick Cutter', 2014, 'Horror', 3),\r\n  createBook('Jump', 'Daniella Moyles', 2020, 'Biography', 3),\r\n  \r\n\r\n];\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    minWidth: 700,\r\n    width: \"97%\",\r\n    float: 'right',\r\n    padding: '50px 20px',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n    \r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: '18%',\r\n  },\r\n  \r\n});\r\n\r\nclass MyBooks extends React.Component {\r\n\r\n  state = {\r\n\r\n    movies: []\r\n};\r\nconstructor(){\r\n    super();\r\n    this.ReloadDataMethod = this.ReloadDataMethod.bind(this);\r\n    }\r\n    ReloadDataMethod(){\r\n      axios.get('http://localhost:4000/api/movies')\r\n      .then((response)=>{\r\n      this.setState({movies: response.data.movies})\r\n      })\r\n      .catch((error)=>{\r\n      console.log(error);\r\n      });\r\n      }\r\n      \r\n  componentDidMount() {\r\n      axios.get('http://localhost:4000/api/movies')\r\n          .then((response) => {\r\n                  this.setState({ movies: response.data})\r\n              }\r\n          )\r\n  //if there is an error an error message will be returned\r\n          .catch(\r\n              (error)=>{\r\n                      console.log(error)\r\n              }\r\n          );\r\n  }\r\n\r\n        render(){\r\n        return this.props.myMovies.map((myMovies)=>{\r\n        //console.log({movie});\r\n        return <MyBooks key={myMovies._id} myMovies={myMovies}\r\n        ReloadDataMethod={this.props.ReloadDataMethod}></MyBooks>\r\n});\r\n\r\n    }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(MyBooks);"]},"metadata":{},"sourceType":"module"}