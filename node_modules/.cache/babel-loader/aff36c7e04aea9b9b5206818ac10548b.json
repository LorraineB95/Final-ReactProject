{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lorraine\\\\Desktop\\\\College 2020\\\\Semester 1\\\\Data Querying and Representation\\\\FinalProject\\\\react-final-project\\\\src\\\\components\\\\BookList\\\\read.js\";\nimport React from 'react';\nimport { Movies } from './movies';\nimport axios from 'axios';\nexport class Read extends React.Component {\n  //state stores data relevent to the component\n  constructor() {\n    super();\n    this.state = {\n      movies: []\n    };\n    this.ReloadDataMethod = this.ReloadDataMethod.bind(this);\n  } //componentDidMount executes after the first render on the client side\n  //axios retrives movie information from the link\n\n\n  ReloadDataMethod() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data.movies\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data\n      });\n    }) //if there is an error an error message will be returned\n    .catch(error => {\n      console.log(error);\n    });\n  } //Render will display the movie data stored in state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello from Read Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Lorraine/Desktop/College 2020/Semester 1/Data Querying and Representation/FinalProject/react-final-project/src/components/BookList/read.js"],"names":["React","Movies","axios","Read","Component","constructor","state","movies","ReloadDataMethod","bind","get","then","response","setState","data","catch","error","console","log","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAEtC;AAKAC,EAAAA,WAAW,GAAE;AACT;AADS,SAJbC,KAIa,GAJL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAIK;AAET,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACC,GAViC,CAYtC;AACA;;;AACAD,EAAAA,gBAAgB,GAAE;AACdN,IAAAA,KAAK,CAACQ,GAAN,CAAU,kCAAV,EACCC,IADD,CACOC,QAAD,IAAY;AAClB,WAAKC,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAEK,QAAQ,CAACE,IAAT,CAAcP;AAAvB,OAAd;AACC,KAHD,EAICQ,KAJD,CAIQC,KAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC,KAND;AAOC;;AAELG,EAAAA,iBAAiB,GAAG;AAChBjB,IAAAA,KAAK,CAACQ,GAAN,CAAU,kCAAV,EACKC,IADL,CACWC,QAAD,IAAc;AACZ,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,QAAQ,CAACE;AAAnB,OAAd;AACH,KAHT,EAKJ;AALI,KAMKC,KANL,CAOSC,KAAD,IAAS;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACP,KATT;AAWH,GApCqC,CAsCtC;;;AACAI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA9CqC","sourcesContent":["import React from 'react';\r\nimport { Movies } from './movies';\r\nimport axios from 'axios';\r\nexport class Read extends React.Component {\r\n\r\n    //state stores data relevent to the component\r\n    state = {\r\n\r\n        movies: []\r\n    };\r\n    constructor(){\r\n        super();\r\n        this.ReloadDataMethod = this.ReloadDataMethod.bind(this);\r\n        }\r\n        \r\n    //componentDidMount executes after the first render on the client side\r\n    //axios retrives movie information from the link\r\n    ReloadDataMethod(){\r\n        axios.get('http://localhost:4000/api/movies')\r\n        .then((response)=>{\r\n        this.setState({movies: response.data.movies})\r\n        })\r\n        .catch((error)=>{\r\n        console.log(error);\r\n        });\r\n        }\r\n        \r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/movies')\r\n            .then((response) => {\r\n                    this.setState({ movies: response.data})\r\n                }\r\n            )\r\n    //if there is an error an error message will be returned\r\n            .catch(\r\n                (error)=>{\r\n                        console.log(error)\r\n                }\r\n            );\r\n    }\r\n\r\n    //Render will display the movie data stored in state\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Hello from Read Component</h3>\r\n         \r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}